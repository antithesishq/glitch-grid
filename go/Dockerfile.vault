# Stage 1: Get Golang image
FROM docker.io/library/golang:1.20-bookworm AS builder
LABEL maintainer="Antithesis <support@antithesis.com>"

# Add source code
RUN mkdir -p /go/src/github.com/antithesis/glitch-grid
COPY go.* vault.go /go/src/github.com/antithesis/glitch-grid

# Download and install antithesis-go-instrumentor
# Installs into $GOPATH/bin => /go/bin
RUN cd /go/src/github.com/antithesis/glitch-grid && \
go get github.com/antithesishq/antithesis-sdk-go/tools/antithesis-go-instrumentor@v0.3.1 && \
go install github.com/antithesishq/antithesis-sdk-go/tools/antithesis-go-instrumentor@v0.3.1 && \
go mod tidy

# Create the destination output directory for the instrumented code.
RUN mkdir -p /go/src/github.com/antithesis/glitch-grid-instrumented

# Perform instrumentation
RUN /go/bin/antithesis-go-instrumentor \
/go/src/github.com/antithesis/glitch-grid \
/go/src/github.com/antithesis/glitch-grid-instrumented

# Build vault binary
RUN cd /go/src/github.com/antithesis/glitch-grid-instrumented/customer && \
go build -o vault *.go

# Stage 2: lightweight "release"
FROM docker.io/library/debian:bookworm-slim
LABEL maintainer="Antithesis <support@antithesis.com>"

# Copy the instrumented binary, and symbols from the build image.
COPY --from=builder \
/go/src/github.com/antithesis/glitch-grid-instrumented/customer/vault /bin/
RUN mkdir -p /symbols
COPY --from=builder /go/src/github.com/antithesis/glitch-grid-instrumented/symbols /symbols/

ENTRYPOINT [ "/bin/vault" ]
